<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 对静态资源文件的访问 -->
	<!-- <mvc:resources mapping="/images/**" location="/images/"/> <mvc:resources 
		mapping="/css/**" location="/css/" /> <mvc:resources mapping="/js/**" location="/js/" 
		/> <mvc:resources mapping="/favicon.ico" location="favicon.ico" /> -->

	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<mvc:interceptor>
			<!-- /**的意思是所有文件夹及里面的子文件夹 -->
			<!--/*是所有文件夹， 不含子文件夹 /是web项目的根目录 -->
			<!-- <mvc:mapping path="/**" /> -->

			<!--仅仅拦截登录验证controller login方法 -->
			<mvc:mapping path="/front/login.shtml" />

			<!-- 需排除拦截的地址 -->
			<!-- <mvc:exclude-mapping path="/userController/login"/> -->
			<!--这个类就是我们自定义的Interceptor (可以没有id，因为用不到) -->
			<bean class="cn.zhou.intercepter.CaptchaIntercepter"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
</beans>